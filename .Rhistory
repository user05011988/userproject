)
?runif
ab=rnorm(200)
mean(ab)
sd(ab)
?rnorm
rrr=apply(pqndata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
dim(rrr)
plot(colMeans(rrr))
cho=apply(pqndata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
cho2=apply(credata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
lol6=p_values_no_round(rbind(cho,pqndata),cho3)
lol5=p_values_no_round(rbind(cho2,credata),cho3)
t.test(lol5,lol6,paired=T,var.equal=F)
cho=apply(pqndata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) fisher.test(pqndata[,i],cho[,i])
?fisher.test
aov(pqndata[,9000],cho[,9000])
aov(pqndata[,9000]~cho[,9000])
tt=aov(pqndata[,9000]~cho[,9000])
summary(tt)
tt[[1]]$'Pr(>F)'
tt[[1]]
str(tt)
str(summary(tt))
tt$ Pr(>F)
tt$'Pr(>F)'
tt[[1]][[1,"Pr(>F)"]]
summary(tt)[[1]][[1,"Pr(>F)"]]
for (i in 1:13001) lol5[1]=summary(aov(pqndata[,i]~ cho[,i]))[[1]][[1,"Pr(>F)"]]
for (i in 1:13001) lol5[i]=summary(aov(pqndata[,i]~ cho[,i]))[[1]][[1,"Pr(>F)"]]
plot(lol5)
cho=matrix(runif(length(dataset)),nrow(dataset),ncol(dataset))
for (i in 1:13001) lol5[i]=summary(aov(pqndata[,i]~ cho[,i]))[[1]][[1,"Pr(>F)"]]
dim(cho)
cho=matrix(runif(length(dataset)),nrow(dataset),ncol(dataset))
dim(cho)
cho=matrix(runif(length(credata)),nrow(credata),ncol(credata))
for (i in 1:13001) lol5[i]=summary(aov(pqndata[,i]~ cho[,i]))[[1]][[1,"Pr(>F)"]]
plot(lol5)
plot(sort(lol5))
cho=matrix(rnorm(length(credata)),nrow(credata),ncol(credata))
for (i in 1:13001) lol5[i]=summary(aov(pqndata[,i]~ cho[,i]))[[1]][[1,"Pr(>F)"]]
plot(lol5)
plot(sort(lol5))
?ks.test
for (i in 1:13001) lol5[i]=ks.test(pqndata[,i]~ cho[,i]))$p.value
for (i in 1:13001) lol5[i]=ks.test(pqndata[,i]~ cho[,i])$p.value
for (i in 1:13001) lol5[i]=ks.test(pqndata[,i], cho[,i])$p.value
plot(lol5)
plot(lol5,ylim=c(0,1))
plot(lol5,ylim=c(0,0.0000001))
cho=apply(pqndata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol5[i]=ks.test(pqndata[,i], cho[,i])$p.value
plot(lol5,ylim=c(0,1))
cho2=apply(credata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol6[i]=ks.test(credata[,i], cho[,i])$p.value
points(lol6,ylim=c(0,1),col='red')
cho3=apply(randomdataset,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
plot(lol5,ylim=c(0,1))
for (i in 1:13001) lol6[i]=ks.test(credata[,i], cho2[,i])$p.value
points(lol6,ylim=c(0,1),col='red')
cho3=apply(randomdataset,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol4[i]=ks.test(randomdataset[,i], cho3[,i])$p.value
points(lol4,ylim=c(0,1),col='blue')
plot(sort(lol4))
points(sort(lol5),ylim=c(0,1),col='blue')
points(sort(lol6),ylim=c(0,1),col='red')
cho4=apply(nodata,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol3[i]=ks.test(noata[,i], cho4[,i])$p.value
for (i in 1:13001) lol3[i]=ks.test(nodata[,i], cho4[,i])$p.value
points(sort(lol3),ylim=c(0,1),col='green')
lol3[1]
plot(colSums(pqndata))
head(colSums(pqndata))
ind=which(colSums(pqndata)>0)
plot(sort(sample(lol4,length(ind))))
points(sort(lol3),ylim=c(0,1),col='green')
points(sort(lol5),ylim=c(0,1),col='red')
plot(sort(lol4))
plot(sort(sample(lol4,length(ind))))
points(sort(lol3[ind]),ylim=c(0,1),col='green')
points(sort(lol5[ind]),ylim=c(0,1),col='blue')
points(sort(lol6[ind]),ylim=c(0,1),col='red')
t.test(lol3[ind],lol4[ind],paired=T,var.equal = F)
t.test(lol5[ind],lol6[ind],paired=T,var.equal = F)
t.test(lol5-lol3[ind],lol6-lol4[ind],paired=T,var.equal = F)
t.test(lol5[ind]-lol3[ind],lol6[ind]-lol4[ind],paired=T,var.equal = F)
t.test(lol5[ind]-lol4[ind],lol6[ind]-lol4[ind],paired=T,var.equal = F)
t.test(cho3[ind]-lol4[ind],cho3[ind]-lol4[ind],paired=T,var.equal = F)
cho5=apply(cho3,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
rn=matrix(rnorm(length(credata)),nrow(credata),ncol(credata))
cho5=apply(rn,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol3[i]=ks.test(rn[,i], cho5[,i])$p.value
for (i in 1:13001) lol2[i]=ks.test(rn[,i], cho5[,i])$p.value
for (i in 1:13001) lol3[i]=ks.test(noata[,i], cho4[,i])$p.value
for (i in 1:13001) lol3[i]=ks.test(nodata[,i], cho4[,i])$p.value
t.test(lol2[ind]-lol4[ind],lol2[ind]-lol4[ind],paired=T,var.equal = F)
plot(lol2)
plot(lol4)
randommdataset=matrix(rnorm(length(credata)),nrow(credata),ncol(credata))
cho3=apply(randommdataset,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:13001) lol4[i]=ks.test(randommdataset[,i], cho3[,i])$p.value
plot(lol2)
plot(lol4)
t.test(lol2[ind]-lol4[ind],lol2[ind]-lol4[ind],paired=T,var.equal = F)
plot(sort(lol2))
plot(sort(lol4))
t.test(lol2-lol4,lol2-lol4,paired=T,var.equal = F)
t.test(lol2[1:50]-lol4[1:50],lol2[1:50]-lol4[1:50],paired=T,var.equal = F)
lol2[1:50]
lol4[1:50]
plot(sort(lol2))
plot(sort(lol4))
points(sort(lol3),col='red')
plot(sort(lol4[ind]))
points(sort(lol3[ind]),col='red')
points(sort(lol5[ind]),col='blue')
points(sort(lol6[ind]),col='green')
plot(sort(lol4[ind]),type='l')
lines(sort(lol3[ind]),col='red')
lines(sort(lol5[ind]),col='blue')
lines(sort(lol6[ind]),col='green')
plot(lol5)
points(ppm,rollmean(lol5, 500,fill=c(0.5,0.5,0.5)),col='red')
library(zoo)
points(ppm,rollmean(lol5, 500,fill=c(0.5,0.5,0.5)),col='red')
plot(lol5)
plot(lol5)
dummy=lol
dummy[is.na(dummy)]=1
points(ppm,rollmean(dummy, 500,fill=c(0.5,0.5,0.5)))
plot(lol5)
plot(lol5)
dummy=lol
dummy[is.na(dummy)]=1
points(ppm,rollmean(dummy, 500,fill=c(0.5,0.5,0.5)),col='red')
plot(ppm,lol5)
dummy=lol
dummy[is.na(dummy)]=1
points(ppm,rollmean(dummy, 500,fill=c(0.5,0.5,0.5)),col='red')
plot(ppm,lol5)
points(ppm,rollmean(lol, 500,fill=c(0.5,0.5,0.5)),col='red')
plot(ppm,lol5)
points(ppm,rollmean(lol5, 500,fill=c(0.5,0.5,0.5)),col='red')
plot(ppm,lol5)
points(ppm,rollmean(lol5, 200,fill=c(0.5,0.5,0.5)),col='red')
plot(ppm,lol5)
lines(ppm,rollmean(lol6, 200,fill=c(0.5,0.5,0.5)),col='blue')
plot(ppm,lol5)
lines(ppm,rollmean(lol6, 200,fill=c(0.5,0.5,0.5)),col='blue',lwd=3)
plot(ppm,lol5)
lines(ppm,rollmean(lol5, 200,fill=c(0.5,0.5,0.5)),col='red',lwd=3)
lines(ppm,rollmean(lol6, 200,fill=c(0.5,0.5,0.5)),col='blue',lwd=3)
mol1=mol2=mol3=rep(NA,188)
randommadg=matrix(rnorm(length(ADG_transformed_data)),nrow(ADG_transformed_data),ncol(ADG_transformed_data))
dho=apply(randommadg,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:188) mol1[i]=ks.test(randommadg[,i], dho[,i])$p.value
dho2=apply(ADG_transformed_data,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:188) mol2[i]=ks.test(ADG_transformed_data[,i], dho2[,i])$p.value
dho3=apply(pqnADG,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:188) mol3[i]=ks.test(pqnADG[,i], dho3[,i])$p.value
t.test(mol2[ind]-mol1[ind],mol3[ind]-mol1[ind],paired=T,var.equal = F)
plot(dho)
plot(dho2)
plot(mol)
plot(mol1)
plot(sort(mol1))
plot(sort(mol2))
plot(sort(mol3))
t.test(mol2-mol1,mol3-mol1,paired=T,var.equal = F)
plot(sort(mol3))
points(sort(mol2),col='red')
plot(mol3)
points(mol2,col='red')
plot(mol2-mol3)
mol2-mol3
plot(sort(mol2-mol3))
plot(sort(abs(mol2-mol3)))
which(abs(mol2-mol3))<0.05)
which(abs(mol2-mol3)<0.05)
which(abs(mol2-mol3)<0.01)
which(abs(mol2-mol3)<0.001)
ind2=which(abs(mol2-mol3)>0.001)
t.test(mol2[ind2]-mol1[ind2],mol3[ind2]-mol1[ind2],paired=T,var.equal = F)
plot(mol3[ind2]-mol2[ind2])
dho3=apply(boxcoxADG,2,function(x)rnorm(132,mean=mean(x),sd=sd(x)))
for (i in 1:188) mol3[i]=ks.test(boxcoxADG[,i], dho3[,i])$p.value
t.test(mol2-mol1,mol3-mol1,paired=T,var.equal = F)
plot(mol3-mol2)
ind2=which(abs(mol2-mol3)>0.001)
t.test(mol2[ind2]-mol1[ind2],mol3[ind2]-mol1[ind2],paired=T,var.equal = F)
dim(dataset)
mol1=mol2=mol3=mol4=rep(NA,13001)
randommdataset=matrix(rnorm(length(credata)),nrow(credata),ncol(credata))
dho=apply(randommdataset,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol1[i]=ks.test(randommdataset[,i], dho[,i])$p.value
dho2=apply(credata,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol2[i]=ks.test(credata[,i], dho2[,i])$p.value
dho3=apply(pqndata,2,function(x)132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol3[i]=ks.test(pqndata[,i], dho3[,i])$p.value
dho3=apply(pqndata,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol3[i]=ks.test(pqndata[,i], dho3[,i])$p.value
plot(sort(mol1),type='l')
lines(sort(mol2),col='red')
lines(sort(mol3),col='blue')
plot(sort(mol1[ind]),type='l')
lines(sort(mol2[ind]),col='red')
lines(sort(mol3[ind]),col='blue')
dho4=apply(nodata,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol3[i]=ks.test(nodata[,i], dho4[,i])$p.value
lines(sort(mol3[ind]),col='green')
lines(sort(mol4[ind]),col='green')
plot(sort(mol1[ind]),type='l')
lines(sort(mol2[ind]),col='red')
lines(sort(mol3[ind]),col='blue')
lines(sort(mol4[ind]),col='green')
dho3=apply(pqndata,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol3[i]=ks.test(pqndata[,i], dho3[,i])$p.value
dho4=apply(nodata,2,function(x)rnorm(132,mean=median(x),sd=mad(x)))
for (i in 1:13001) mol4[i]=ks.test(nodata[,i], dho4[,i])$p.value
plot(sort(mol1[ind]),type='l')
lines(sort(mol2[ind]),col='red')
lines(sort(mol3[ind]),col='blue')
lines(sort(mol4[ind]),col='green')
ml=runif(8000)
mean(ml)
sd(ml)
MADM <- function(x){
(mad(x,na.rm=T)/median(x,na.rm=T))
}
MADM <- function(x){
(mad(x,na.rm=T)/median(x,na.rm=T))
}
ler=apply(randomdataset,2,MADM)
plot(ler)
randomdataset=matrix(runif(132*13001),132,13001)
MADM <- function(x){
(mad(x,na.rm=T)/median(x,na.rm=T))
}
randomdataset=matrix(rnorm(132*13001),132,13001)
ler=apply(randomdataset,2,MADM)
plot(ler)
randomdataset=matrix(rnorm(132*13001),132,13001)
ler=apply(randomdataset,2,MADM)
plot(sort(ler))
plot(sort(ler),ylim=c(0,2))
plot(sort(ler),ylim=c(0,200))
plot(sort(ler),ylim=c(0,2000))
randomdataset=matrix(rnorm(132*13001,mean=5),132,13001)
MADM <- function(x){
(mad(x,na.rm=T)/median(x,na.rm=T))
}
ler=apply(randomdataset,2,MADM)
plot(sort(ler),ylim=c(0,2000))
plot(sort(ler),ylim=c(0,10))
plot(sort(ler),ylim=c(0,3))
plot(sort(ler),ylim=c(0,0.5))
plot(ler)
ler2=apply(credata,2,MADM)
plot(ler2)
plot(ler2,ylim=c(0.5))
plot(ler2,ylim=c(0,5))
ler3=apply(pqndata,2,MADM)
points(ler3,ylim=c(0,5),col='red')
plot(ppm,ler2,ylim=c(0,5))
points(ppm,ler3,ylim=c(0,5),col='red')
dummy=ler2
dummy[is.na(dummy)]=0
lines(ppm,rollmean(dummy, 100,fill=c(0,0,0)),col='red')
plot(ppm,ler2,ylim=c(0,5),xlim=c(12,-1))
points(ppm,ler3,ylim=c(0,5),col='red')
dummy=ler2
dummy[is.na(dummy)]=0
lines(ppm,rollmean(dummy, 100,fill=c(0,0,0)),col='blue')
dummy=ler3
dummy[is.na(dummy)]=0
lines(ppm,rollmean(dummy, 100,fill=c(0,0,0)),col='gren')
dummy=ler3
dummy[is.na(dummy)]=0
lines(ppm,rollmean(dummy, 100,fill=c(0,0,0)),col='green')
plot(sort(ler3))
plot(sort(ler2))
fivenum(ler)
fivenum(ler2)
fivenum(ler3)
t.test(ler2,ler3,paired=T,var.equal = F)
t.test(ler2[3500:11500],ler3[3500:11500],paired=T,var.equal = F)
t.test(ler2[ind],ler3[ind],paired=T,var.equal = F)
t.test(ler2[8000:10000],ler3[8000:10000],paired=T,var.equal = F)
shapiro.test(ler2)
shapiro.test(ler2[8000:10000])
wilcox.test(ler2[8000:10000],ler3[8000:10000],paired=T,var.equal = F)
wilcox.test(ler2,ler3,paired=T,var.equal = F)
ler4=apply(aligneddataset,2,MADM)
wilcox.test(ler3,ler4,paired=T,var.equal = F)
fivenum(ler3)
fivenum(ler4)
plot(sort(ler3),ylim=c(0,4))
points(sort(ler4),ylim=c(0,4),col='red')
plot(ler3-ler4,ylim=c(0,4))
plot(ler3-ler4,ylim=c(-4,4))
wilcox.test(ler3[8000:10000],ler4[8000:10000],paired=T,var.equal = F)
wilcox.test(ler3,ler4,paired=T,var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler4*apply(aligneddataset,2,median),paired=T,var.equal = F)
wilcox.test(ler2,ler3,paired=T,var.equal = F)
wilcox.test(ler2*apply(credata,2,median),ler4*apply(pqndata,2,median),paired=T,var.equal = F)
ler5=apply(twodata,2,MADM)
wilcox.test(ler3,ler5,paired=T,var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler5*apply(twodata,2,median),paired=T,var.equal = F)
?approx
dummy=approx(seq(12,-1,-0.002),ler5,seq(12,-1,-0.001))$y
plot(dummy5)
plot(dummy)
ler5=apply(twodata,2,MADM)
ler5=approx(seq(12,-1,-0.002),ler5,seq(12,-1,-0.001))$y
wilcox.test(ler3,ler5,paired=T,var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler5*approx(seq(12,-1,-0.002),apply(twodata,2,median),seq(12,-1,-0.001))$y,paired=T,var.equal = F)
ler5=apply(twodata,2,MADM)
wilcox.test(ler3,ler5,paired=F,var.equal = F)
ler5=approx(seq(12,-1,-0.002),ler5,seq(12,-1,-0.001))$y
wilcox.test(ler3*apply(pqndata,2,median),ler5*approx(seq(12,-1,-0.002),apply(twodata,2,median),seq(12,-1,-0.001))$y,paired=T,var.equal = F)
fivenum(ler3)
fivenum(ler5)
ler2=apply(boxcoxADG,2,MADM)
ler3=apply(pqnADG,2,MADM)
wilcox.test(ler2,ler3,paired=T,var.equal = F)
ler2=apply(boxcoxADG,2,MADM)
ler3=apply(pqnADG,2,MADM)
wilcox.test(ler1,ler3,paired=T,var.equal = F)
wilcox.test(ler,ler2,paired=T,var.equal = F)
ler=apply(ADG_transformed_data,2,MADM)
ler2=apply(boxcoxADG,2,MADM)
ler3=apply(pqnADG,2,MADM)
wilcox.test(ler,ler2,paired=T,var.equal = F)
fivenum(ler)
fivenum(ler2)
fivenum(ler3)
plot(sort(ler))
points(sort(ler2),col='red')
points(sort(ler3),col='blue')
?wilcox.test
wilcox.test(ler,ler2,alternative='less',paired=T,var.equal = F)
wilcox.test(ler,ler2,alternative='greater',paired=T,var.equal = F)
wilcox.test(ler,ler2,alternative='two-sided',paired=T,var.equal = F)
wilcox.test(ler,ler2,alternative='two.sided',paired=T,var.equal = F)
wilcox.test(ler,ler2,paired=T,var.equal = F)
wilcox.test(ler,ler2,paired=T,alternative='less',var.equal = F)
plot(sort(ler))
polints(sort(ler2),col='red')
points(sort(ler2),col='red')
wilcox.test(ler2,ler,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3,ler,paired=T,alternative='less',var.equal = F)
ler2=apply(credata,2,MADM)
ler3=apply(pqndata,2,MADM)
wilcox.test(ler3,ler2,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler2*apply(credata,2,median),paired=T,alternative='less',var.equal = F)
wilcox.test(ler4*apply(aligneddataset,2,median),ler3*apply(pqndata,2,median),paired=T,alternative='less',var.equal = F)
wilcox.test(ler4,ler3,paired=T,alternative='less',var.equal = F)
ler4=apply(aligneddataset,2,MADM)
ler4=apply(aligneddataset,2,MADM)
wilcox.test(ler4,ler3,paired=T,alternative='less',var.equal = F)
wilcox.test(ler4*apply(aligneddataset,2,median),ler3*apply(pqndata,2,median),paired=T,alternative='less',var.equal = F)
t.test(ler4,ler3,paired=T,alternative='less',var.equal = F)
t.test(ler4*apply(aligneddataset,2,median),ler3*apply(pqndata,2,median),paired=T,alternative='less',var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler*apply(sumdata,2,median),paired=T,alternative='less',var.equal = F)
ler=apply(sumdata,2,MADM)
wilcox.test(ler3,ler,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler*apply(sumdata,2,median),paired=T,alternative='less',var.equal = F)
ler2=apply(credata,2,MADM)
ler3=apply(pqndata,2,MADM)
wilcox.test(ler3,ler2,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3*apply(pqndata,2,median),ler2*apply(credata,2,median),paired=T,alternative='less',var.equal = F)
rer=which(apply(pqndata,2,median)>median(pqndata))
ler=apply(sumdata,2,MADM)
wilcox.test(ler3,ler,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3[rer],ler[rer],paired=T,alternative='less',var.equal = F)
wilcox.test(ler3[rer],ler2[rer],paired=T,alternative='less',var.equal = F)
plot(ppm[rer],ler2,xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler3,xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],rollmean(ler2/ler3,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
plot(ppm[rer],ler2,xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
plot(ppm[rer],ler2[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler3[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],rollmean(ler2[rer]/ler3[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
plot(ppm[rer],rollmean(ler2[rer]/ler3[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l'ylim=c(0,max(ler2[rer]/ler3[rer])))
abline(1,0,col='red')
plot(ppm[rer],rollmean(ler2[rer]/ler3[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,max(ler2[rer]/ler3[rer])))
abline(1,0,col='red')
wilcox.test(ler4[rer],ler3[rer],paired=T,alternative='less',var.equal = F)
plot(ppm[rer],ler2[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler4[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],rollmean(ler2[rer]/ler4[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,max(ler2[rer]/ler4[rer])))
abline(1,0,col='red')
plot(ppm[rer],ler2[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler4[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],ler3[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler4[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],rollmean(ler3[rer]/ler4[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,max(ler3[rer]/ler4[rer])))
plot(ppm[rer],ler3[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler4[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
plot(ppm[rer],rollmean(ler3[rer]/ler4[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,2)
abline(1,0,col='red')
plot(ppm[rer],rollmean(ler3[rer]/ler4[rer],200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,2))
abline(1,0,col='red')
matplot(t(aligneddataset[10500:10550]),type='l')
matplot(t(aligneddataset[,10500:10550]),type='l')
matplot(t(dataset[,10500:10550]),type='l')
sd=rollmean(ler3[rer]/ler4[rer],200,fill=c(1,1,1))
plot(sd)
sd=ler3[rer]/ler4[rer][2500:3000]
sd=(ler3[rer]/ler4[rer])[2500:3000]
plot(sd)
which(is.na(sd))
ter=ler3[rer]/ler4[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,2))
abline(1,0,col='red')
ler5=apply(twodata,2,MADM)
ler5=approx(seq(12,-1,-0.002),ler5,seq(12,-1,-0.001))$y
wilcox.test(ler3[rer],ler5[rer],paired=T,alternative='less',var.equal = F)
wilcox.test(ler5[rer],ler3[rer],paired=T,alternative='less',var.equal = F)
plot(ppm[rer],ler3[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler5[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
ter=ler3[rer]/ler5[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l',ylim=c(0,2))
abline(1,0,col='red')
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
ter=ler3[rer]/ler4[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
ter=ler3[rer]/ler4[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
wilcox.test(ler4[rer],ler3[rer],paired=T,alternative='less',var.equal = F)
ter=ler3[rer]/ler4[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
wilcox.test(ler5[rer],ler3[rer],paired=T,alternative='less',var.equal = F)
ter=ler3[rer]/ler5[rer]
ter[is.na(ter)]=1
plot(ppm[rer],rollmean(ter,200,fill=c(1,1,1)),xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
abline(1,0,col='red')
plot(ppm[rer],ler3[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),type='l')
lines(ppm[rer],ler5[rer],xlim=c(max(ppm[rer]),min(ppm[rer])),col='red')
ler4=apply(aligneddataset,2,MADM)
wilcox.test(ler4[rer],ler3[rer],paired=T,alternative='less',var.equal = F)
wilcox.test(ler3[rer],ler4[rer],paired=T,alternative='less',var.equal = F)
ler=apply(ADG_transformed_data,2,MADM)
ler2=apply(boxcoxADG,2,MADM)
ler3=apply(pqnADG,2,MADM)
wilcox.test(ler2,ler,paired=T,alternative='less',var.equal = F)
wilcox.test(ler3,ler,paired=T,alternative='less',var.equal = F)
fivenum(ler2)
fivenum(ler3)
fivenum(ler)
wilcox.test(ler,ler2,paired=T,alternative='less',var.equal = F)
wilcox.test(ler,ler3,paired=T,alternative='less',var.equal = F)
abc=p_values_no_round(ADG_transformed_data,2,MADM)
abc=p_values_no_round(ADG_transformed_data,cho3)
cho3=cbind(1:132,c(rep(1,48),rep(2,84)))
abc=p_values_no_round(ADG_transformed_data,cho3)
plot(sort(abc))
abc2=p_values_no_round(boxcoxADG,cho3)
abc3=p_values_no_round(pqnADG,cho3)
abc4=p_values_no_round(randomdataset[,1:188],cho3)
plot(sort(abc),type='l')
lines(sort(abc2),col='red')
lines(sort(abc3),col='green')
lines(sort(abc4),col='blue')
bbc=p_values_no_round(credata,cho3)
bbc2=p_values_no_round(nodata,cho3)
bbc3=p_values_no_round(pqndata,cho3)
bbc4=p_values_no_round(randomdataset,cho3)
plot(sort(bbc),type='l')
lines(sort(bbc2),col='red')
lines(sort(bbc3),col='green')
lines(sort(bbc4),col='blue')
summary(lm(sort(bbc2) ~ seq(0,1,length.out=length(sort(bbc2)))))$sigma)
summary(lm(sort(bbc2) ~ seq(0,1,length.out=length(sort(bbc2)))))$sigma
summary(lm(sort(bbc4) ~ seq(0,1,length.out=length(sort(bbc4)))))$sigma
summary(lm(sort(bbc3) ~ seq(0,1,length.out=length(sort(bbc3)))))$sigma
summary(lm(sort(bbc1) ~ seq(0,1,length.out=length(sort(bbc3)))))$sigma
summary(lm(sort(bbc) ~ seq(0,1,length.out=length(sort(bbc)))))$sigma
summary(lm(sort(abc) ~ seq(0,1,length.out=length(sort(abc)))))$sigma
summary(lm(sort(abc2) ~ seq(0,1,length.out=length(sort(abc2)))))$sigma
summary(lm(sort(abc3) ~ seq(0,1,length.out=length(sort(abc3)))))$sigma
summary(lm(sort(abc4) ~ seq(0,1,length.out=length(sort(abc4)))))$sigma
boxcoxADG=ADG_transformed_data
for (i in 1:188) {
tto=boxcoxADG[which(boxcoxADG[,i]>0),i]
aaaaa=tryCatch(boxcox(tto~1, lambda = seq(-2, 2, 1/20)),error=function(e) NaN)
if (is.list(aaaaa)) boxcoxADG[which(boxcoxADG[,i]>0),i]=tto^aaaaa$x[which.max(aaaaa$y)]
}
fivenum(boxcoxADG)
fivenum(ADG_transformed_data)
i
boxcox(tto~1, lambda = seq(-2, 2, 1/20))
library(MASS)
boxcoxADG=ADG_transformed_data
for (i in 1:188) {
tto=boxcoxADG[which(boxcoxADG[,i]>0),i]
aaaaa=tryCatch(boxcox(tto~1, lambda = seq(-2, 2, 1/20)),error=function(e) NaN)
if (is.list(aaaaa)) boxcoxADG[which(boxcoxADG[,i]>0),i]=tto^aaaaa$x[which.max(aaaaa$y)]
}
save.image("~/urinelast.RData")
